name: Check C++ Formatting

on:
  push:
    branches:
      - master
      - '*_with_ci'
  pull_request:
    branches: master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install clang-format-14
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format-14

      - name: Check formatting of changed C++ and CUDA files
        run: |
          # Function to check if file should be excluded from formatting
          should_exclude_file() {
            local file="$1"

            # Exclude files in include/ directory (third-party headers)
            if [[ "$file" == include/* ]]; then
              return 0
            fi

            # Exclude files in src/gui/wxformbuilder (input .fbp files)
            if [[ "$file" == src/gui/wxformbuilder/* ]]; then
              return 0
            fi

            # Exclude files with ProjectX_gui in the name (generated by wxFormBuilder)
            if [[ "$file" == *ProjectX_gui*.cpp ]] || [[ "$file" == *ProjectX_gui*.h ]]; then
              return 0
            fi

            # Check file header for wxFormBuilder warning
            if [ -f "$file" ]; then
              if head -n 10 "$file" | grep -q "PLEASE DO \*NOT\* EDIT THIS FILE\|DO NOT EDIT THIS FILE\|Generated by wxFormBuilder"; then
                return 0
              fi
            fi

            return 1
          }

          # Get list of changed C++ and CUDA files
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only --diff-filter=ACM origin/${{ github.base_ref }}..HEAD | grep -E '\.(cpp|h|cc|cxx|hpp|cu|cuh)$' || true)
          else
            CHANGED_FILES=$(git diff --name-only --diff-filter=ACM HEAD~1..HEAD | grep -E '\.(cpp|h|cc|cxx|hpp|cu|cuh)$' || true)
          fi

          if [ -z "$CHANGED_FILES" ]; then
            echo "No C++ or CUDA files changed, skipping format check"
            exit 0
          fi

          echo "Checking formatting of changed C++ and CUDA files:"
          echo "$CHANGED_FILES"
          echo ""

          FORMAT_ISSUES=()

          for file in $CHANGED_FILES; do
            # Skip excluded files
            if should_exclude_file "$file"; then
              echo "  Skipping (excluded): $file"
              continue
            fi

            if [ -f "$file" ]; then
              # Check if file matches clang-format style
              if ! clang-format-14 "$file" | diff -q "$file" - > /dev/null 2>&1; then
                FORMAT_ISSUES+=("$file")
              fi
            fi
          done

          if [ ${#FORMAT_ISSUES[@]} -gt 0 ]; then
            echo "ERROR: The following files have formatting issues:"
            for file in "${FORMAT_ISSUES[@]}"; do
              echo "  - $file"
            done
            echo ""
            echo "Please format these files with clang-format-14:"
            echo "  clang-format-14 -i <file>"
            exit 1
          fi

          echo "All changed C++ and CUDA files are properly formatted."
