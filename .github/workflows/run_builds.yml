name: Run Builds

on:
  workflow_call:
    inputs:
      build_type:
        description: 'A descriptive string of the configure options being build'
        required: true
        type: string
      configure_options:
        description: 'A set of configure options to set'
        required: true
        type: string
      global_configure_options:
        description: 'A set of global configure options to set'
        required: true
        type: string
      runs_on_os:
        description: 'The OS to run on'
        required: true 
        type: string
      CC:
        description: 'The precompiler to use'
        required: true
        type: string
      CXX: 
        description: 'The c++ compiler to use'
        required: true
        type: string   
      cppstandard:
        description: 'The c++ standard to use = 17 or 20'
        required: true 
        type: string
      run_tests:
        description: 'Run tests, currently we can not run GPU code, so we skip tests for GPU builds'
        required: true
        type: boolean
      n_threads:
        description: 'Number of threads to use for make. Current Free tier has 4 threads'
        required: true
        type: number

jobs:
  build:
    continue-on-error: false
    strategy:
      fail-fast: true
    runs-on: ${{ inputs.runs_on_os }}
    container: 
      image: cistemdashorg/cistem_build_env:v2.2.2
      options: --user root --rm
      # options: --user root --rm --gpus all
    outputs:
      version: ${{ steps.configure.outputs.version }}
    steps:
    # - name: okay the repo   
    #   run: git config --global --add safe.directory /__w/quick-lint-js/quick-lint-js

    - uses: actions/checkout@v4
      # the macro for CISTEM_VERSION_TEXT needs access to the history.
      with:
        fetch-depth: 0
        
    - name: regenerate_project
      run: ./regenerate_project.b
    - name: configure
      env:
        CC: ${{ inputs.CC }}
        CXX: ${{ inputs.CXX }}
      run: |
        . /opt/intel/oneapi/setvars.sh && export PATH=/usr/bin:$PATH
        mkdir -p build/${{ inputs.build_type }} 
        cd build/${{ inputs.build_type }} 
        echo $CC
        echo $CXX
        git config --global --add safe.directory /__w/cisTEM/cisTEM
        ../../configure   ${{ inputs.configure_options }}  ${{ inputs.global_configure_options }}
        VERSION=$(cat config.log | grep CISTEM_VERSION_TEXT | cut -d' ' -f3 | tr -d '"')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    - uses: ammaraskar/gcc-problem-matcher@master
    - name: make 
      run: |
        . /opt/intel/oneapi/setvars.sh && export PATH=/usr/bin:$PATH
        workdir=$(pwd)
        cd build/${{ inputs.build_type }} && make -j ${{ inputs.n_threads }}
        cd $workdir
        cp scripts/testing/test_and_benchmark.sh build/${{ inputs.build_type }}/src/
    - name: clean up
      run: |
        cd build/${{ inputs.build_type }}
        rm -r src/core
        rm -r src/gui
        rm -r src/programs
    # - name: Create binary artifact
    #   uses: actions/upload-artifact@v4
    #   with: 
    #     name: cistem_binaries_${{ inputs.build_type }}
    #     path: build/${{ inputs.build_type }}/src

    - name: Console test
      if: ${{ inputs.run_tests }}
      run: |
        . /opt/intel/oneapi/setvars.sh && export PATH=/usr/bin:$PATH
        cd build/${{ inputs.build_type }}/src
        chmod +x *
        ./console_test 
        ./test_and_benchmark.sh ./
        
    # chmod is redundant, but to keep this independent of Console test we keep it.
    - name: Samples functional testing
      if: ${{ inputs.run_tests }}
      run: |
        . /opt/intel/oneapi/setvars.sh && export PATH=/usr/bin:$PATH
        cd build/${{ inputs.build_type }}/src 
        chmod +x samples_functional_testing
        ./samples_functional_testing

    # chmod is redundant, but to keep this independent of Console test we keep it.
    - name: Unit tests
      if: ${{ inputs.run_tests }}
      run: |
        . /opt/intel/oneapi/setvars.sh && export PATH=/usr/bin:$PATH
        cd build/${{ inputs.build_type }}/src 
        chmod +x unit_test_runner
        ./unit_test_runner
  

