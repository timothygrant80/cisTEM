noinst_HEADERS = core/stopwatch.h \
                 core/asset_group.h \
                 core/core_headers.h \
                 core/defines.h \
                 core/functions.h \
                 core/image.h \
                 core/spectrum_image.h \
                 core/mrc_file.h \
                 core/mrc_header.h \
                 core/dm_file.h \
                 core/sqlite/sqlite3.h \
                 core/assets.h \
                 core/socket_codes.h \
                 core/userinput.h \
                 core/randomnumbergenerator.h \
                 core/matrix.h \
                 core/symmetry_matrix.h \
                 core/ctf.h \
                 core/curve.h \
                 core/angles_and_shifts.h \
                 core/parameter_constraints.h \
                 core/empirical_distribution.h \
                 core/resolution_statistics.h \
                 core/reconstructed_volume.h \
                 core/particle.h \
                 core/reconstruct_3d.h \
                 core/electron_dose.h \
                 core/run_command.h \
                 core/run_profile.h \
                 core/run_profile_manager.h \
                 core/refinement_package.h \
                 core/template_matches_package.h \
                 core/refinement.h \
                 core/database.h \
                 core/project.h \
                 core/job_packager.h \
                 core/job_tracker.h \
                 core/numeric_text_file.h \
                 core/progressbar.h \
                 core/downhill_simplex.h \
                 core/brute_force_search.h \
                 core/conjugate_gradient.h \
                 core/euler_search.h \
                 core/frealign_parameter_file.h \
                 core/particle_finder.h \
                 core/myapp.h \
                 core/abstract_image_file.h \
                 core/tiff/tiff.h \
                 core/tiff/tiffconf.h \
                 core/tiff/tiffio.h \
                 core/tiff/tiffvers.h \
                 core/tiff_file.h \
                 core/image_file.h \
                 core/f2c.h \
                 core/gui_core_headers.h \
                 core/gui_job_controller.h \
                 core/classification.h \
                 core/classification_selection.h \
                 core/basic_star_file_reader.h \
                 core/rle3d.h \
                 core/angular_distribution_histogram.h \
                 core/local_resolution_estimator.h \
                 core/cistem_parameters.h \
                 core/cistem_star_file_reader.h \
                 core/socket_communicator.h \
                 core/template_matching.h \
                 core/json/json_defs.h \
                 core/json/jsonval.h \
                 core/json/jsonreader.h \
                 core/json/jsonwriter.h \
                 core/stopwatch.h \
                 core/ccl3d.h \
                 core/eer_file.h \
                 gui/job_panel.h \
                 gui/gui_functions.h \
                 gui/DatabaseUpdateDialog.h \
                 gui/ResultsDataViewListCtrl.h \
                 gui/BitmapPanel.h \
                 gui/PickingBitmapPanel.h \
                 gui/my_controls.h \
                 gui/UnblurResultsPanel.h \
                 gui/CTF1DPanel.h \
                 gui/MyAssetPanelParent.h \
                 gui/MyImageAssetPanel.h \
                 gui/MyParticlePositionAssetPanel.h \
                 gui/MyVolumeAssetPanel.h \
                 gui/MyVolumeImportDialog.h \
                 gui/MyMovieFilterDialog.h \
                 gui/MyImageImportDialog.h \
                 gui/ShowCTFResultsPanel.h \
                 gui/FindCTFPanel.h \
                 gui/FindParticlesPanel.h \
                 gui/MyMovieAlignResultsPanel.h \
                 gui/MyFindCTFResultsPanel.h \
                 gui/PickingResultsDisplayPanel.h \
                 gui/MyRunProfilesPanel.h \
                 gui/MyAddRunCommandDialog.h \
                 gui/MyNewProjectWizard.h \
                 gui/MyNewRefinementPackageWizard.h \
                 gui/NewTemplateMatchesPackageWizard.h \
                 gui/MyResultsPanel.h \
                 gui/MyAssetsPanel.h \
                 gui/ActionsPanelSpa.h \
                 gui/ActionsPanelTm.h \
                 gui/MySettingsPanel.h \
                 gui/PickingResultsPanel.h \
                 gui/MyParticlePositionExportDialog.h \
                 gui/MyFrealignExportDialog.h \
                 gui/MyRelionExportDialog.h \
                 gui/MyRefinementPackageAssetPanel.h \
                 gui/TemplateMatchesPackageAssetPanel.h \
                 gui/MyRenameDialog.h \
                 gui/MyVolumeChooserDialog.h \
                 gui/MyRefine3DPanel.h \
                 gui/Generate3DPanel.h \
                 gui/AutoRefine3dPanel.h \
                 gui/DisplayRefinementResultsPanel.h \
                 gui/PopupTextDialog.h \
                 gui/PlotFSCPanel.h \
                 gui/MyFSCPanel.h \
                 gui/MyRefinementResultsPanel.h \
                 gui/AngularDistributionPlotPanel.h \
                 gui/AlignMoviesPanel.h \
                 gui/ErrorDialog.h \
                 gui/MainFrame.h \
                 gui/mathplot.h \
                 gui/MyMovieAssetPanel.h \
                 gui/MovieImportDialog.h \
                 gui/MyRefine2DPanel.h \
                 gui/Refine2DResultsPanel.h \
                 gui/ClassificationPlotPanel.h \
                 gui/ClassumSelectionCopyFromDialog.h \
                 gui/MyOverviewPanel.h \
                 gui/DisplayPanel.h \
                 gui/DisplayFrame.h \
                 gui/ProjectX_gui.h \
                 gui/gui_globals.h \
                 gui/ImportRefinementPackageWizard.h \
                 gui/AbInitioPlotPanel.h \
                 gui/AbInitio3DPanel.h \
                 gui/AssetPickerComboPanel.h \
                 gui/ExportRefinementPackageWizard.h \
                 gui/RefinementParametersDialog.h \
                 gui/LargeAngularPlotDialog.h \
                 gui/Sharpen3DPanel.h \
                 gui/PlotCurvePanel.h \
                 gui/MatchTemplatePanel.h \
                 gui/DistributionPlotDialog.h \
                 gui/RefineCTFPanel.h \
                 gui/ShowTemplateMatchResultsPanel.h \
                 gui/MyExperimentalPanel.h \
                 gui/MatchTemplateResultsPanel.h \
                 gui/MatchTemplatePanel.h \
                 gui/RefineTemplatePanel.h \
                 gui/icons/action_icon.cpp \
                 gui/icons/assets_icon.cpp \
                 gui/icons/ctf_icon.cpp \
                 gui/icons/image_icon.cpp \
                 gui/icons/movie_align_icon.cpp \
                 gui/icons/movie_icon.cpp \
                 gui/icons/overview_icon.cpp \
                 gui/icons/results_icon.cpp \
                 gui/icons/settings_icon.cpp \
                 gui/icons/particle_position_icon.cpp \
                 gui/icons/virus_icon.cpp \
                 gui/icons/refinement_package_icon.cpp \
                 gui/icons/growth.cpp \
                 gui/icons/run_profiles_icon.cpp \
                 gui/icons/open_eye_icon_20.cpp \
                 gui/icons/checked_checkbox_icon_20.cpp \
                 gui/icons/unchecked_checkbox_icon_20.cpp \
                 gui/icons/checked_checkbox_eye_icon_20.cpp \
                 gui/icons/unchecked_checkbox_eye_icon_20.cpp \
                 gui/icons/dlp_alignment.cpp \
                 gui/icons/ctffind_definitions.cpp \
                 gui/icons/ctffind_diagnostic_image.cpp \
                 gui/icons/ctffind_example_1dfit.cpp \
                 gui/icons/niko_picture1.cpp \
                 gui/icons/niko_picture2.cpp \
                 gui/icons/2d_classification_icon.cpp \
                 gui/icons/classification_infotext1.cpp \
                 gui/icons/classification_infotext2.cpp \
                 gui/icons/classification_infotext3.cpp \
                 gui/icons/classification_infotext4.cpp \
                 gui/icons/display_auto_icon.cpp \
                 gui/icons/display_fft_icon.cpp \
                 gui/icons/display_global_icon.cpp \
                 gui/icons/display_histogram_icon.cpp \
                 gui/icons/display_invert_icon.cpp \
                 gui/icons/display_local_icon.cpp \
                 gui/icons/display_manual_icon.cpp \
                 gui/icons/display_next_icon.cpp \
                 gui/icons/display_open_icon.cpp \
                 gui/icons/display_previous_disabled_icon.cpp \
                 gui/icons/display_previous_icon.cpp \
                 gui/icons/display_refresh_icon.cpp \
                 gui/icons/display_high_quality_icon.cpp \
                 gui/icons/display_fft_icon.cpp \
                 gui/icons/add_file_icon.cpp \
                 gui/icons/delete_file_icon.cpp \
                 gui/icons/cisTEM_logo_800.cpp \
                 gui/icons/show_text.cpp \
                 gui/icons/tool_icon.cpp \
                 gui/icons/window_plus_icon_16.cpp \
                 gui/icons/abinitio_icon.cpp \
                 gui/icons/manual_refine_icon.cpp \
                 gui/icons/generate3d_icon.cpp \
                 gui/icons/sharpen_map_icon.cpp \
                 gui/icons/show_angles.cpp \
                 gui/icons/small_save_icon.cpp \
                 gui/icons/cisTEM_beta_logo_800.cpp \
                 gui/icons/cisTEM_beta_logo_300.cpp \
                 gui/icons/up_arrow.cpp \
                 gui/icons/down_arrow.cpp \
                 gui/icons/VSV_startup_800.cpp \
                 gui/icons/vsv_sharpening.cpp \
                 gui/icons/refine_ctf_icon.cpp \
                 gui/icons/refine_template_icon.cpp \
				 gui/workflows/Icons.cpp \
                 programs/console_test/hiv_image_80x80x1.cpp \
                 programs/console_test/hiv_images_shift_noise_80x80x10.cpp \
                 programs/console_test/sine_128x128x1.cpp \
                 gui/icons/match_template_icon.cpp \
                 programs/refine3d/ProjectionComparisonObjects.h \
                 core/pdb.h \
                 core/scattering_potential.h \
                 gui/AtomicCoordinatesAssetPanel.h \
                 gui/AtomicCoordinatesChooserDialog.h \
                 gui/AtomicCoordinatesImportDialog.h \
                 programs/cisTEM_display/display_gui.h
                 

                 

                 
if EXPERIMENTAL_AM
noinst_HEADERS += 	gui/icons/experimental_icon.cpp \
                    core/water.h \
                    programs/simulate/wave_function_propagator.h  \
                    programs/match_template/template_matching_data_sizer.h 

endif      


noinst_HEADERS +=  programs/samples/samples_functional_testing.h 
noinst_HEADERS +=  programs/samples/common/helper_functions.h programs/samples/common/embedded_test_file.h programs/samples/common/numeric_test_file.h
noinst_HEADERS +=  programs/samples/common/common.h programs/samples/0_simple/simple.h 

if WANT_CISTEM_GPU_AM
noinst_HEADERS += programs/samples/1_cpu_gpu_comparison/cpu_gpu_comparison.h
endif



noinst_LIBRARIES = libcore.a libguicore.a

# Min needed for GUI
bin_PROGRAMS =  cisTEM_job_control \
                cisTEM \
                unblur \
                reconstruct3d \
                merge3d \
                refine3d \
                ctffind \
                find_particles \
                refine2d \
                merge2d \
                prepare_stack \
                prepare_stack_classaverage \
                align_symmetry \
                fft \
                local_resolution \
                local_resolution_finalize \
                local_resolution_filter \
                refine_ctf \
                estimate_beamtilt \
                warp_to_cistem \
                match_template \
                refine_template \
                make_template_result \
                prepare_stack_matchtemplate \
                cisTEM_display 



# Programs for testing and automated testing
bin_PROGRAMS += quick_test console_test unit_test_runner samples_functional_testing gui_test

########################################################
# Optional programs listed at the
#######################################################
if ENABLE_APPLYCTF_AM
bin_PROGRAMS += applyctf
endif

if ENABLE_PROJECT3D_AM
bin_PROGRAMS += project3d
endif

if ENABLE_CALCOCC_AM
bin_PROGRAMS += calc_occ
endif

if ENABLE_REMOVEOUTLIERPIXELS_AM
bin_PROGRAMS += remove_outlier_pixels
endif

if ENABLE_RESIZE_AM
bin_PROGRAMS += resize
endif

if ENABLE_RESAMPLE_AM
bin_PROGRAMS += resample
endif

if ENABLE_RESETMRCHEADER_AM
bin_PROGRAMS += reset_mrc_header
endif

if ENABLE_ESTIMATEDATASETSSNR_AM
bin_PROGRAMS += estimate_dataset_ssnr
endif                 
                
if ENABLE_MONTAGE_AM
bin_PROGRAMS += montage
endif

if ENABLE_EXTRACTPARTICLES_AM
bin_PROGRAMS += extract_particles
endif

if ENABLE_SUMALLMRCFILES_AM
bin_PROGRAMS += sum_all_mrc_files
endif

if ENABLE_SUMALLTIFFILES_AM
bin_PROGRAMS += sum_all_tif_files
endif

if ENABLE_SUMALLEERFILES_AM
bin_PROGRAMS += sum_all_eer_files
endif

if ENABLE_APPLYGAINREF_AM
bin_PROGRAMS += apply_gain_ref
endif

if ENABLE_SCALEWITHMASK_AM
bin_PROGRAMS += scale_with_mask
endif

if ENABLE_MAGDISTORTIONCORRECT_AM
bin_PROGRAMS += mag_distortion_correct
endif

if ENABLE_APPLYMASK_AM
bin_PROGRAMS += apply_mask
endif

if ENABLE_CONVERTTIFTOMRC_AM
bin_PROGRAMS += convert_tif_to_mrc
endif

if ENABLE_REMOVEINFANDNAN_AM
bin_PROGRAMS += remove_inf_and_nan
endif

if ENABLE_MAKEORTHVIEWS_AM
bin_PROGRAMS += make_orth_views
endif

if ENABLE_SHARPENMAP_AM
bin_PROGRAMS += sharpen_map
endif

if ENABLE_CALCULATEFSC_AM
bin_PROGRAMS += calculate_fsc
endif

if ENABLE_MAKESIZEMAP_AM
bin_PROGRAMS += make_size_map
endif

if ENABLE_CONVERTPARTOSTAR_AM
bin_PROGRAMS += convert_par_to_star
endif

if ENABLE_SUBTRACTFROMSTACK_AM
bin_PROGRAMS += subtract_from_stack
endif

if ENABLE_BINARIZE_AM
bin_PROGRAMS += binarize
endif

if ENABLE_MOVEVOLUMEXYZ_AM
bin_PROGRAMS += move_volume_xyz
endif

if ENABLE_SYMMETRYEXPANDSTACKANDPAR_AM
bin_PROGRAMS += symmetry_expand_stack_and_par
endif

if ENABLE_SUBTRACTTWOSTACKS_AM
bin_PROGRAMS += subtract_two_stacks
endif

if ENABLE_ADDTWOSTACKS_AM
bin_PROGRAMS += add_two_stacks
endif

if ENABLE_MULTIPLYTWOSTACKS_AM
bin_PROGRAMS += multiply_two_stacks
endif

if ENABLE_DIVIDETWOSTACKS_AM
bin_PROGRAMS += divide_two_stacks
endif

if ENABLE_INVERTSTACK_AM
bin_PROGRAMS += invert_stack
endif

if ENABLE_ALIGNCOORDINATES_AM
bin_PROGRAMS += align_coordinates
endif

if ENABLE_ALIGNSYMMETRY_AM
bin_PROGRAMS += align_symmetry
endif

if ENABLE_FINDDQE_AM
bin_PROGRAMS += find_dqe
endif

if ENABLE_COMBINEVIAMAX_AM
bin_PROGRAMS += combine_via_max
endif

if ENABLE_REMOVERELIONSTRIPES_AM
bin_PROGRAMS += remove_relion_stripes
endif

if ENABLE_CREATEMASK_AM
bin_PROGRAMS += create_mask
endif

if ENABLE_INVERTHAND_AM
bin_PROGRAMS += invert_hand
endif

if ENABLE_APPENDSTACKS_AM
bin_PROGRAMS += append_stacks
endif

if ENABLE_CONVERTSTARTOBINARY_AM
bin_PROGRAMS += convert_star_to_binary
endif

if ENABLE_CONVERTBINARYTOSTAR_AM
bin_PROGRAMS += convert_binary_to_star
endif

if ENABLE_CONVERTEERTOMRC_AM
bin_PROGRAMS += convert_eer_to_mrc
endif

if ENABLE_AZIMUTHALAVERAGE_AM
bin_PROGRAMS += azimuthal_average
endif

if ENABLE_NORMALIZESTACK_AM
bin_PROGRAMS += normalize_stack
endif

if ENABLE_PRINTSTACKSTATISTICS_AM  
bin_PROGRAMS += print_stack_statistics
endif

if ENABLE_COMBINESTACKSBYSTAR_AM
bin_PROGRAMS += combine_stacks_by_star
endif

if ENABLE_MEASURETEMPLATEBIAS_AM
bin_PROGRAMS += measure_template_bias
endif

if ENABLE_CALCULATETEMPLATEPVALUE_AM
bin_PROGRAMS += calculate_template_pvalue
endif

if ENABLE_ALIGNNMRSPECTRA_AM
bin_PROGRAMS += align_nmr_spectra
endif

if ENABLE_CORRELATENMRSPECTRA_AM
bin_PROGRAMS += correlate_nmr_spectra
endif

if ENABLE_FILTERIMAGES_AM
bin_PROGRAMS += filter_images
endif

########################################################
# End optional programs
########################################################


if EXPERIMENTAL_AM   
bin_PROGRAMS += refine_template_dev simulate sum_all_power_spectra
endif

                
if WANT_CISTEM_GPU_AM
    bin_PROGRAMS +=  match_template_gpu 
    #unblur_gpu global_search_gpu global_search_refinement_gpu
endif

if EXPERIMENTAL_AM   
bin_PROGRAMS += refine_template_dev simulate sum_all_power_spectra
endif




if WANT_CISTEM_GPU_AM

# FIXME: gpu_devices should either be compiled like other programs, or removed as it really is not needed.
bin_PROGRAMS +=  gpu_devices
noinst_LIBRARIES += libgpucore.a  

libgpucore_a_SOURCES  =      gpu/core_extensions/stop_watch_gpu.cu \
                             gpu/core_extensions/image.cu \
                             gpu/Histogram.cu \
                             gpu/template_matching_empirical_distribution.cu \
                             gpu/TemplateMatchingCore.cu \
                             gpu/DeviceManager.cu \
                             gpu/TensorManager.cu \
                             gpu/GpuImage.cu \
                             programs/refine3d/batched_search.cu \
                             test/gpu/test_gpu_kernels.cu \
                             programs/quick_test/quick_test_gpu.cu
if ENABLE_LOCAL_BUILD_OF_FASTFFT_AM
    libgpucore_a_SOURCES += ../include/FastFFT/src/fastfft/FastFFT.cu
endif

libgpucore_OBJECTS=$(libgpucore_a_SOURCES:.cu=.o)                                                   

libgpucore_a_CFLAGS = -DENABLEGPU $(CUDA_CPPFLAGS) $(WX_CPPFLAGS_BASE)
libgpucore_a_CXXFLAGS = -DENABLEGPU $(CUDA_CXXFLAGS) $(WX_CXXFLAGS_BASE)
libgpucore_a_LIBADD = $(libFastFFT_OBJECTS) gpu/gpudevicecode.o 
libgpucore_a_AR = $(NVCC) -DENABLEGPU $(CUDA_CXXFLAGS) -lib -o

# This line only knows about objects build from libgpucore_a_SOURCES. We have to add any others e.g. gpu/gpu_device_code.o mannually above in the LIBADD
.cu.o:
	$(NVCC) -DENABLEGPU $(CUDA_CXXFLAGS) $(WX_CPPFLAGS_BASE) -dc -o $@ $<
    
# FastFFT_LIBS will be empty if we are building the library, or /opt/FastFFT/lib/FastFFT.o if we are linking from the object included in the build container (latter prefered) $(libgpucore_OBJECTS) $(libFastFFT_OBJECTS)
gpu/gpudevicecode.o: $(libgpucore_OBJECTS) $(libFastFFT_OBJECTS)
	$(NVCC) -DENABLEGPU $(CUDA_CXXFLAGS) --device-link $^ -o gpu/gpudevicecode.o $(CUDA_LIBS)

endif

libcore_a_SOURCES  = core/stopwatch.cpp \
                     core/functions.cpp \
		             core/globals.cpp \
                     core/randomnumbergenerator.cpp \
                       core/userinput.cpp \
                       core/angles_and_shifts.cpp \
                       core/parameter_constraints.cpp \
                       core/assets.cpp \
                       core/asset_group.cpp \
                       core/curve.cpp \
                       core/image.cpp \
                       core/spectrum_image.cpp \
                       core/electron_dose.cpp \
                       core/matrix.cpp \
                       core/symmetry_matrix.cpp \
                       core/abstract_image_file.cpp \
                       core/mrc_header.cpp \
                       core/mrc_file.cpp \
                       core/tiff_file.cpp \
                       core/dm_file.cpp \
                       core/image_file.cpp \
                       core/sqlite/sqlite3.c \
                       core/database.cpp \
                       core/project.cpp \
                       core/reconstruct_3d.cpp \
                       core/reconstructed_volume.cpp \
                       core/resolution_statistics.cpp \
                       core/particle.cpp \
                       core/job_packager.cpp \
                       core/job_tracker.cpp \
                       core/run_command.cpp \
                       core/run_profile.cpp \
                       core/run_profile_manager.cpp \
                       core/myapp.cpp \
                       core/empirical_distribution.cpp \
                       core/ctf.cpp \
                       core/numeric_text_file.cpp \
                       core/progressbar.cpp \
                       core/downhill_simplex.cpp \
                       core/brute_force_search.cpp \
                       core/va04.cpp \
                       core/conjugate_gradient.cpp \
                       core/euler_search.cpp \
                       core/frealign_parameter_file.cpp \
                       core/basic_star_file_reader.cpp \
                       core/refinement_package.cpp \
                       core/template_matches_package.cpp \
                       core/refinement.cpp \
                       core/classification.cpp \
                       core/particle_finder.cpp \
                       core/classification_selection.cpp \
                       core/rle3d.cpp \
                       core/angular_distribution_histogram.cpp \
                       core/local_resolution_estimator.cpp  \
                       core/cistem_parameters.cpp \
                       core/cistem_star_file_reader.cpp \
                       core/socket_communicator.cpp \
                       core/json/jsonval.cpp \
                       core/json/jsonreader.cpp \
                       core/json/jsonwriter.cpp \
                       core/ccl3d.cpp \
                       core/template_matching.cpp \
                       core/eer_file.cpp \
                       core/pdb.cpp \
                       core/scattering_potential.cpp \
                       core/padded_coordinates.cpp



if EXPERIMENTAL_AM
libcore_a_SOURCES += core/water.cpp
endif

libcore_a_CXXFLAGS = $(WX_CPPFLAGS_BASE)
libcore_a_CPPFLAGS = $(WX_CPPFLAGS_BASE)

libguicore_a_SOURCES  =  core/gui_job_controller.cpp

libguicore_a_CXXFLAGS = $(WX_CPPFLAGS)
libguicore_a_CPPFLAGS = $(WX_CPPFLAGS)


cisTEM_SOURCES = programs/projectx/projectx.cpp \
                programs/cisTEM_display/display_gui.cpp \
                gui/gui_globals.cpp \
				gui/workflows/Icons.cpp \
                gui/MyFSCPanel.cpp \
                gui/MyRefinementResultsPanel.cpp \
                gui/PlotFSCPanel.cpp  \
                gui/gui_functions.cpp \
                gui/my_controls.cpp \
                gui/MyRenameDialog.cpp \
                gui/BitmapPanel.cpp \
                gui/PickingBitmapPanel.cpp \
                gui/job_panel.cpp \
                gui/ProjectX_gui_abinitio.cpp \
                gui/ProjectX_gui_assets.cpp \
                gui/ProjectX_gui_autorefine.cpp \
                gui/ProjectX_gui_controls.cpp \
                gui/ProjectX_gui_ctffind.cpp \
                gui/ProjectX_gui_main.cpp \
                gui/ProjectX_gui_matchtemplate.cpp \
                gui/ProjectX_gui_picking.cpp \
                gui/ProjectX_gui_refine2d.cpp \
                gui/ProjectX_gui_refine3d.cpp \
                gui/ProjectX_gui_refinement_package.cpp \
                gui/ProjectX_gui_settings.cpp \
                gui/ProjectX_gui_unblur.cpp \
                gui/ProjectX_gui_wizards.cpp \
                gui/DatabaseUpdateDialog.cpp \
                gui/ResultsDataViewListCtrl.cpp \
                gui/MyMovieFilterDialog.cpp \
                gui/MainFrame.cpp \
                gui/MyAssetPanelParent.cpp \
                gui/MyMovieAssetPanel.cpp \
                gui/MyImageAssetPanel.cpp \
                gui/MyParticlePositionAssetPanel.cpp \
                gui/MyVolumeChooserDialog.cpp \
                gui/MovieImportDialog.cpp \
                gui/MyImageImportDialog.cpp \
                gui/MyVolumeImportDialog.cpp \
                gui/ErrorDialog.cpp \
                gui/AlignMoviesPanel.cpp \
                gui/MyRunProfilesPanel.cpp \
                gui/mathplot.cpp \
                gui/MyMovieAlignResultsPanel.cpp \
                gui/MyFindCTFResultsPanel.cpp \
                gui/PickingResultsPanel.cpp \
                gui/MyAddRunCommandDialog.cpp \
                gui/MyNewProjectWizard.cpp \
                gui/MyNewRefinementPackageWizard.cpp \
                gui/NewTemplateMatchesPackageWizard.cpp \
                gui/UnblurResultsPanel.cpp \
                gui/ShowCTFResultsPanel.cpp \
                gui/PickingResultsDisplayPanel.cpp \
                gui/CTF1DPanel.cpp \
                gui/FindCTFPanel.cpp \
                gui/FindParticlesPanel.cpp \
                gui/MyVolumeAssetPanel.cpp \
                gui/MyResultsPanel.cpp \
                gui/MyAssetsPanel.cpp \
                gui/ActionsPanelSpa.cpp \
                gui/ActionsPanelTm.cpp \
                gui/MySettingsPanel.cpp \
                gui/MyParticlePositionExportDialog.cpp \
                gui/MyFrealignExportDialog.cpp \
                gui/MyRelionExportDialog.cpp \
                gui/MyRefinementPackageAssetPanel.cpp \
                gui/TemplateMatchesPackageAssetPanel.cpp \
                gui/MyRefine3DPanel.cpp \
                gui/MyRefine2DPanel.cpp \
                gui/ClassificationPlotPanel.cpp \
                gui/AbInitioPlotPanel.cpp \
                gui/Refine2DResultsPanel.cpp \
                gui/AngularDistributionPlotPanel.cpp \
                core/particle_finder.cpp \
                gui/DisplayPanel.cpp \
                gui/ClassumSelectionCopyFromDialog.cpp \
                gui/MyOverviewPanel.cpp \
                gui/AbInitio3DPanel.cpp \
                gui/AssetPickerComboPanel.cpp \
                gui/AutoRefine3dPanel.cpp \
                gui/DisplayRefinementResultsPanel.cpp \
                gui/ImportRefinementPackageWizard.cpp \
                gui/PopupTextDialog.cpp \
                gui/ExportRefinementPackageWizard.cpp \
                gui/Generate3DPanel.cpp \
                gui/LargeAngularPlotDialog.cpp \
                gui/RefinementParametersDialog.cpp \
                gui/Sharpen3DPanel.cpp \
                gui/PlotCurvePanel.cpp \
                gui/DistributionPlotDialog.cpp \
                gui/RefineCTFPanel.cpp \
                gui/ShowTemplateMatchResultsPanel.cpp \
                gui/MatchTemplatePanel.cpp \
                gui/MatchTemplateResultsPanel.cpp \
                gui/RefineTemplatePanel.cpp \
                gui/CombineRefinementPackagesWizard.cpp \
                gui/AtomicCoordinatesAssetPanel.cpp \
                gui/AtomicCoordinatesChooserDialog.cpp \
                gui/AtomicCoordinatesImportDialog.cpp \
                gui/ResampleDialog.cpp

if EXPERIMENTAL_AM
cisTEM_SOURCES +=  gui/RefineTemplateDevPanel.cpp gui/MyExperimentalPanel.cpp 
endif

if ENABLE_WEBVIEW_AM
cisTEM_SOURCES += gui/WebViewPanel.cpp
endif

cisTEM_CXXFLAGS = $(WX_CPPFLAGS)
cisTEM_CPPFLAGS = $(WX_CPPFLAGS)
cisTEM_LDADD    = libguicore.a libcore.a $(WX_LIBS) $(MKL_LIBS)
cisTEM_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

cisTEM_display_SOURCES = programs/cisTEM_display/cisTEM_display.cpp programs/cisTEM_display/display_gui.cpp gui/DisplayPanel.cpp gui/DisplayFrame.cpp
cisTEM_display_CXXFLAGS = $(WX_CPPFLAGS)
cisTEM_display_CPPFLAGS = $(WX_CPPFLAGS)
cisTEM_display_LDADD = libguicore.a libcore.a $(WX_LIBS) $(MKL_LIBS)
cisTEM_display_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

gui_test_SOURCES = programs/gui_test/gui_test.cpp gui/PlotCurvePanel.cpp gui/mathplot.cpp
gui_test_CXXFLAGS = $(WX_CPPFLAGS)
gui_test_CPPFLAGS = $(WX_CPPFLAGS)
gui_test_LDADD = libguicore.a libcore.a $(WX_LIBS)
gui_test_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

cisTEM_job_control_SOURCES  = programs/guix_job_control/guix_job_control.cpp 
cisTEM_job_control_CXXFLAGS = $(WX_CPPFLAGS_BASE)
cisTEM_job_control_CPPFLAGS = $(WX_CPPFLAGS_BASE)
cisTEM_job_control_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
cisTEM_job_control_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

# unlike other programs where we build program/ program_gpu to maintain
# both codepaths with the most src code overlap as possible, for console tests
# we often have to write a distinct enough version of the test for the GPU
# that we just write seperate methods and use precompiler guards (one binary.)
console_test_SOURCES  = programs/console_test/console_test.cpp 
if WANT_CISTEM_GPU_AM 
console_test_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
console_test_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
else
console_test_CXXFLAGS = $(WX_CPPFLAGS_BASE)
console_test_CPPFLAGS = $(WX_CPPFLAGS_BASE)
endif

console_test_LDSTRING=
if WANT_CISTEM_GPU_AM
# WANT_CISTEM_GPU_AM also implies ENABLE_FASTFFT_AM 
    console_test_LDSTRING += libgpucore.a
endif


console_test_LDADD    = $(console_test_LDSTRING) libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
console_test_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


unblur_SOURCES  = programs/unblur/unblur.cpp
unblur_CXXFLAGS = $(WX_CPPFLAGS_BASE)
unblur_CPPFLAGS = $(WX_CPPFLAGS_BASE)
unblur_LDADD    = libcore.a $(LIBS) $(WX_LIBS_BASE) $(MKL_LIBS)
unblur_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

# if WANT_CISTEM_GPU_AM
# unblur_gpu_SOURCES  = programs/unblur/unblur.cpp
# unblur_gpu_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
# unblur_gpu_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
# unblur_gpu_LDADD    = libgpucore.a libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
# endif

applyctf_SOURCES  = programs/applyctf/applyctf.cpp
applyctf_CXXFLAGS = $(WX_CPPFLAGS_BASE)
applyctf_CPPFLAGS = $(WX_CPPFLAGS_BASE)
applyctf_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
applyctf_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

ctffind_SOURCES = programs/ctffind/ctffind.cpp programs/ctffind/ctftilt.cpp programs/ctffind/ctffind_thickness_nodes.cpp programs/ctffind/ctffind_image_ctf_comparison.cpp programs/ctffind/ctffind_objective_functions.cpp
ctffind_CXXFLAGS = $(WX_CPPFLAGS_BASE)
ctffind_CPPFLAGS = $(WX_CPPFLAGS_BASE)
ctffind_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
ctffind_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

reconstruct3d_SOURCES  = programs/reconstruct3d/reconstruct3d.cpp
reconstruct3d_CXXFLAGS = $(WX_CPPFLAGS_BASE)
reconstruct3d_CPPFLAGS = $(WX_CPPFLAGS_BASE)
reconstruct3d_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
reconstruct3d_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

merge3d_SOURCES  = programs/merge3d/merge3d.cpp
merge3d_CXXFLAGS = $(WX_CPPFLAGS_BASE)
merge3d_CPPFLAGS = $(WX_CPPFLAGS_BASE)
merge3d_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
merge3d_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

calc_occ_SOURCES  = programs/calc_occ/calc_occ.cpp
calc_occ_CXXFLAGS = $(WX_CPPFLAGS_BASE)
calc_occ_CPPFLAGS = $(WX_CPPFLAGS_BASE)
calc_occ_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
calc_occ_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

project3d_SOURCES  = programs/project3d/project3d.cpp
project3d_CXXFLAGS = $(WX_CPPFLAGS_BASE)
project3d_CPPFLAGS = $(WX_CPPFLAGS_BASE)
project3d_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
project3d_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

refine3d_SOURCES  = programs/refine3d/refine3d.cpp
refine3d_CXXFLAGS = $(WX_CPPFLAGS_BASE)
refine3d_CPPFLAGS = $(WX_CPPFLAGS_BASE)
refine3d_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
refine3d_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

remove_outlier_pixels_SOURCES  = programs/remove_outlier_pixels/remove_outlier_pixels.cpp
remove_outlier_pixels_CXXFLAGS = $(WX_CPPFLAGS_BASE)
remove_outlier_pixels_CPPFLAGS = $(WX_CPPFLAGS_BASE)
remove_outlier_pixels_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
remove_outlier_pixels_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

resize_SOURCES  = programs/resize/resize.cpp
resize_CXXFLAGS = $(WX_CPPFLAGS_BASE)
resize_CPPFLAGS = $(WX_CPPFLAGS_BASE)
resize_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
resize_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

resample_SOURCES  = programs/resample/resample.cpp
resample_CXXFLAGS = $(WX_CPPFLAGS_BASE)
resample_CPPFLAGS = $(WX_CPPFLAGS_BASE)
resample_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
resample_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

estimate_dataset_ssnr_SOURCES  = programs/estimate_dataset_ssnr/estimate_dataset_ssnr.cpp
estimate_dataset_ssnr_CXXFLAGS = $(WX_CPPFLAGS_BASE)
estimate_dataset_ssnr_CPPFLAGS = $(WX_CPPFLAGS_BASE)
estimate_dataset_ssnr_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
estimate_dataset_ssnr_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

reset_mrc_header_SOURCES  = programs/reset_mrc_header/reset_mrc_header.cpp
reset_mrc_header_CXXFLAGS = $(WX_CPPFLAGS_BASE)
reset_mrc_header_CPPFLAGS = $(WX_CPPFLAGS_BASE)
reset_mrc_header_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
reset_mrc_header_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

find_particles_SOURCES  = programs/find_particles/find_particles.cpp
find_particles_CXXFLAGS = $(WX_CPPFLAGS_BASE)
find_particles_CPPFLAGS = $(WX_CPPFLAGS_BASE)
find_particles_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
find_particles_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

montage_SOURCES  = programs/montage/montage.cpp
montage_CXXFLAGS = $(WX_CPPFLAGS_BASE)
montage_CPPFLAGS = $(WX_CPPFLAGS_BASE)
montage_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
montage_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

extract_particles_SOURCES  = programs/extract_particles/extract_particles.cpp
extract_particles_CXXFLAGS = $(WX_CPPFLAGS_BASE)
extract_particles_CPPFLAGS = $(WX_CPPFLAGS_BASE)
extract_particles_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
extract_particles_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

sum_all_mrc_files_SOURCES  = programs/sum_all_mrc_files/sum_all_mrc_files.cpp
sum_all_mrc_files_CXXFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_mrc_files_CPPFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_mrc_files_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
sum_all_mrc_files_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

sum_all_eer_files_SOURCES  = programs/sum_all_eer_files/sum_all_eer_files.cpp
sum_all_eer_files_CXXFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_eer_files_CPPFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_eer_files_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
sum_all_eer_files_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

measure_template_bias_SOURCES  = programs/measure_template_bias/measure_template_bias.cpp
measure_template_bias_CXXFLAGS = $(WX_CPPFLAGS_BASE)
measure_template_bias_CPPFLAGS = $(WX_CPPFLAGS_BASE)
measure_template_bias_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
measure_template_bias_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

sum_all_tif_files_SOURCES  = programs/sum_all_tif_files/sum_all_tif_files.cpp
sum_all_tif_files_CXXFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_tif_files_CPPFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_tif_files_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
sum_all_tif_files_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

apply_gain_ref_SOURCES  = programs/apply_gain_ref/apply_gain_ref.cpp
apply_gain_ref_CXXFLAGS = $(WX_CPPFLAGS_BASE)
apply_gain_ref_CPPFLAGS = $(WX_CPPFLAGS_BASE)
apply_gain_ref_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
apply_gain_ref_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

scale_with_mask_SOURCES  = programs/scale_with_mask/scale_with_mask.cpp
scale_with_mask_CXXFLAGS = $(WX_CPPFLAGS_BASE)
scale_with_mask_CPPFLAGS = $(WX_CPPFLAGS_BASE)
scale_with_mask_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
scale_with_mask_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

refine2d_SOURCES  = programs/refine2d/refine2d.cpp
refine2d_CXXFLAGS = $(WX_CPPFLAGS_BASE)
refine2d_CPPFLAGS = $(WX_CPPFLAGS_BASE)
refine2d_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
refine2d_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

merge2d_SOURCES  = programs/merge2d/merge2d.cpp
merge2d_CXXFLAGS = $(WX_CPPFLAGS_BASE)
merge2d_CPPFLAGS = $(WX_CPPFLAGS_BASE)
merge2d_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
merge2d_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

mag_distortion_correct_SOURCES  = programs/mag_distortion_correct/mag_distortion_correct.cpp
mag_distortion_correct_CXXFLAGS = $(WX_CPPFLAGS_BASE)
mag_distortion_correct_CPPFLAGS = $(WX_CPPFLAGS_BASE)
mag_distortion_correct_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
mag_distortion_correct_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

apply_mask_SOURCES  = programs/apply_mask/apply_mask.cpp
apply_mask_CXXFLAGS = $(WX_CPPFLAGS_BASE)
apply_mask_CPPFLAGS = $(WX_CPPFLAGS_BASE)
apply_mask_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
apply_mask_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

convert_tif_to_mrc_SOURCES  = programs/convert_tif_to_mrc/convert_tif_to_mrc.cpp
convert_tif_to_mrc_CXXFLAGS = $(WX_CPPFLAGS_BASE)
convert_tif_to_mrc_CPPFLAGS = $(WX_CPPFLAGS_BASE)
convert_tif_to_mrc_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
convert_tif_to_mrc_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

remove_inf_and_nan_SOURCES  = programs/remove_inf_and_nan/remove_inf_and_nan.cpp
remove_inf_and_nan_CXXFLAGS = $(WX_CPPFLAGS_BASE)
remove_inf_and_nan_CPPFLAGS = $(WX_CPPFLAGS_BASE)
remove_inf_and_nan_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
remove_inf_and_nan_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

make_orth_views_SOURCES  = programs/make_orth_views/make_orth_views.cpp
make_orth_views_CXXFLAGS = $(WX_CPPFLAGS_BASE)
make_orth_views_CPPFLAGS = $(WX_CPPFLAGS_BASE)
make_orth_views_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
make_orth_views_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

sharpen_map_SOURCES  = programs/sharpen_map/sharpen_map.cpp
sharpen_map_CXXFLAGS = $(WX_CPPFLAGS_BASE)
sharpen_map_CPPFLAGS = $(WX_CPPFLAGS_BASE)
sharpen_map_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
sharpen_map_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

calculate_fsc_SOURCES  = programs/calculate_fsc/calculate_fsc.cpp
calculate_fsc_CXXFLAGS = $(WX_CPPFLAGS_BASE)
calculate_fsc_CPPFLAGS = $(WX_CPPFLAGS_BASE)
calculate_fsc_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
calculate_fsc_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

make_size_map_SOURCES  = programs/make_size_map/make_size_map.cpp
make_size_map_CXXFLAGS = $(WX_CPPFLAGS_BASE)
make_size_map_CPPFLAGS = $(WX_CPPFLAGS_BASE)
make_size_map_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
make_size_map_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

align_symmetry_SOURCES  = programs/align_symmetry/align_symmetry.cpp
align_symmetry_CXXFLAGS = $(WX_CPPFLAGS_BASE)
align_symmetry_CPPFLAGS = $(WX_CPPFLAGS_BASE)
align_symmetry_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
align_symmetry_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

prepare_stack_SOURCES  = programs/prepare_stack/prepare_stack.cpp
prepare_stack_CXXFLAGS = $(WX_CPPFLAGS_BASE)
prepare_stack_CPPFLAGS = $(WX_CPPFLAGS_BASE)
prepare_stack_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
prepare_stack_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


prepare_stack_classaverage_SOURCES  = programs/prepare_stack_classaverage/prepare_stack_classaverage.cpp
prepare_stack_classaverage_CXXFLAGS = $(WX_CPPFLAGS_BASE)
prepare_stack_classaverage_CPPFLAGS = $(WX_CPPFLAGS_BASE)
prepare_stack_classaverage_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
prepare_stack_classaverage_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

subtract_from_stack_SOURCES  = programs/subtract_from_stack/subtract_from_stack.cpp
subtract_from_stack_CXXFLAGS = $(WX_CPPFLAGS_BASE)
subtract_from_stack_CPPFLAGS = $(WX_CPPFLAGS_BASE)
subtract_from_stack_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
subtract_from_stack_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

binarize_SOURCES  = programs/binarize/binarize.cpp
binarize_CXXFLAGS = $(WX_CPPFLAGS_BASE)
binarize_CPPFLAGS = $(WX_CPPFLAGS_BASE)
binarize_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
binarize_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

move_volume_xyz_SOURCES  = programs/move_volume_xyz/move_volume_xyz.cpp
move_volume_xyz_CXXFLAGS = $(WX_CPPFLAGS_BASE)
move_volume_xyz_CPPFLAGS = $(WX_CPPFLAGS_BASE)
move_volume_xyz_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
move_volume_xyz_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

symmetry_expand_stack_and_par_SOURCES  = programs/symmetry_expand_stack_and_par/symmetry_expand_stack_and_par.cpp
symmetry_expand_stack_and_par_CXXFLAGS = $(WX_CPPFLAGS_BASE)
symmetry_expand_stack_and_par_CPPFLAGS = $(WX_CPPFLAGS_BASE)
symmetry_expand_stack_and_par_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
symmetry_expand_stack_and_par_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

fft_SOURCES  = programs/fft/fft.cpp
fft_CXXFLAGS = $(WX_CPPFLAGS_BASE)
fft_CPPFLAGS = $(WX_CPPFLAGS_BASE)    
fft_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
fft_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

local_resolution_SOURCES  = programs/local_resolution/local_resolution.cpp
local_resolution_CXXFLAGS = $(WX_CPPFLAGS_BASE)
local_resolution_CPPFLAGS = $(WX_CPPFLAGS_BASE)
local_resolution_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
local_resolution_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

local_resolution_finalize_SOURCES  = programs/local_resolution/local_resolution_finalize.cpp
local_resolution_finalize_CXXFLAGS = $(WX_CPPFLAGS_BASE)
local_resolution_finalize_CPPFLAGS = $(WX_CPPFLAGS_BASE)
local_resolution_finalize_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
local_resolution_finalize_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


quick_test_SOURCES  = programs/quick_test/quick_test.cpp 
if WANT_CISTEM_GPU_AM 
quick_test_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
quick_test_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
else
quick_test_CXXFLAGS = $(WX_CPPFLAGS_BASE)
quick_test_CPPFLAGS = $(WX_CPPFLAGS_BASE)
endif

quick_test_LDSTRING=
if WANT_CISTEM_GPU_AM
# WANT_CISTEM_GPU_AM also implies ENABLE_FASTFFT_AM 
    quick_test_LDSTRING += libgpucore.a
endif
quick_test_LDADD    = $(quick_test_LDSTRING) libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
quick_test_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


local_resolution_filter_SOURCES  = programs/local_resolution_filter/local_resolution_filter.cpp
local_resolution_filter_CXXFLAGS = $(WX_CPPFLAGS_BASE)
local_resolution_filter_CPPFLAGS = $(WX_CPPFLAGS_BASE)
local_resolution_filter_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
local_resolution_filter_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

subtract_two_stacks_SOURCES  = programs/subtract_two_stacks/subtract_two_stacks.cpp
subtract_two_stacks_CXXFLAGS = $(WX_CPPFLAGS_BASE)
subtract_two_stacks_CPPFLAGS = $(WX_CPPFLAGS_BASE)
subtract_two_stacks_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
subtract_two_stacks_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

align_coordinates_SOURCES  = programs/align_coordinates/align_coordinates.cpp
align_coordinates_CXXFLAGS = $(WX_CPPFLAGS_BASE)
align_coordinates_CPPFLAGS = $(WX_CPPFLAGS_BASE)
align_coordinates_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
align_coordinates_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

add_two_stacks_SOURCES  = programs/add_two_stacks/add_two_stacks.cpp
add_two_stacks_CXXFLAGS = $(WX_CPPFLAGS_BASE)
add_two_stacks_CPPFLAGS = $(WX_CPPFLAGS_BASE)
add_two_stacks_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
add_two_stacks_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

azimuthal_average_SOURCES  = programs/azimuthal_average/azimuthal_average.cpp
azimuthal_average_CXXFLAGS = $(WX_CPPFLAGS_BASE)
azimuthal_average_CPPFLAGS = $(WX_CPPFLAGS_BASE)
azimuthal_average_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
azimuthal_average_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

multiply_two_stacks_SOURCES  = programs/multiply_two_stacks/multiply_two_stacks.cpp
multiply_two_stacks_CXXFLAGS = $(WX_CPPFLAGS_BASE)
multiply_two_stacks_CPPFLAGS = $(WX_CPPFLAGS_BASE)
multiply_two_stacks_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
multiply_two_stacks_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

divide_two_stacks_SOURCES  = programs/divide_two_stacks/divide_two_stacks.cpp
divide_two_stacks_CXXFLAGS = $(WX_CPPFLAGS_BASE)
divide_two_stacks_CPPFLAGS = $(WX_CPPFLAGS_BASE)
divide_two_stacks_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
divide_two_stacks_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

invert_stack_SOURCES  = programs/invert_stack/invert_stack.cpp
invert_stack_CXXFLAGS = $(WX_CPPFLAGS_BASE)
invert_stack_CPPFLAGS = $(WX_CPPFLAGS_BASE)
invert_stack_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
invert_stack_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

convert_par_to_star_SOURCES  = programs/convert_par_to_star/convert_par_to_star.cpp
convert_par_to_star_CXXFLAGS = $(WX_CPPFLAGS_BASE)
convert_par_to_star_CPPFLAGS = $(WX_CPPFLAGS_BASE)
convert_par_to_star_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
convert_par_to_star_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

find_dqe_SOURCES  = programs/find_dqe/find_dqe.cpp
find_dqe_CXXFLAGS = $(WX_CPPFLAGS_BASE)
find_dqe_CPPFLAGS = $(WX_CPPFLAGS_BASE)
find_dqe_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
find_dqe_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

combine_via_max_SOURCES  = programs/combine_via_max/combine_via_max.cpp
combine_via_max_CXXFLAGS = $(WX_CPPFLAGS_BASE)
combine_via_max_CPPFLAGS = $(WX_CPPFLAGS_BASE)
combine_via_max_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
combine_via_max_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

refine_ctf_SOURCES  = programs/refine_ctf/refine_ctf.cpp
refine_ctf_CXXFLAGS = $(WX_CPPFLAGS_BASE)
refine_ctf_CPPFLAGS = $(WX_CPPFLAGS_BASE)
refine_ctf_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
refine_ctf_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

estimate_beamtilt_SOURCES  = programs/estimate_beamtilt/estimate_beamtilt.cpp
estimate_beamtilt_CXXFLAGS = $(WX_CPPFLAGS_BASE)
estimate_beamtilt_CPPFLAGS = $(WX_CPPFLAGS_BASE)
estimate_beamtilt_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
estimate_beamtilt_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

remove_relion_stripes_SOURCES  = programs/remove_relion_stripes/remove_relion_stripes.cpp
remove_relion_stripes_CXXFLAGS = $(WX_CPPFLAGS_BASE)
remove_relion_stripes_CPPFLAGS = $(WX_CPPFLAGS_BASE)
remove_relion_stripes_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
remove_relion_stripes_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

warp_to_cistem_SOURCES  = programs/warp_to_cistem/warp_to_cistem.cpp
warp_to_cistem_CXXFLAGS = $(WX_CPPFLAGS_BASE)
warp_to_cistem_CPPFLAGS = $(WX_CPPFLAGS_BASE)
warp_to_cistem_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
warp_to_cistem_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

create_mask_SOURCES  = programs/create_mask/create_mask.cpp
create_mask_CXXFLAGS = $(WX_CPPFLAGS_BASE)
create_mask_CPPFLAGS = $(WX_CPPFLAGS_BASE)
create_mask_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
create_mask_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

invert_hand_SOURCES  = programs/invert_hand/invert_hand.cpp
invert_hand_CXXFLAGS = $(WX_CPPFLAGS_BASE)
invert_hand_CPPFLAGS = $(WX_CPPFLAGS_BASE)
invert_hand_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
invert_hand_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

append_stacks_SOURCES  = programs/append_stacks/append_stacks.cpp
append_stacks_CXXFLAGS = $(WX_CPPFLAGS_BASE)
append_stacks_CPPFLAGS = $(WX_CPPFLAGS_BASE)
append_stacks_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
append_stacks_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

convert_star_to_binary_SOURCES  = programs/convert_star_to_binary/convert_star_to_binary.cpp
convert_star_to_binary_CXXFLAGS = $(WX_CPPFLAGS_BASE)
convert_star_to_binary_CPPFLAGS = $(WX_CPPFLAGS_BASE)
convert_star_to_binary_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
convert_star_to_binary_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


convert_binary_to_star_SOURCES  = programs/convert_binary_to_star/convert_binary_to_star.cpp
convert_binary_to_star_CXXFLAGS = $(WX_CPPFLAGS_BASE)
convert_binary_to_star_CPPFLAGS = $(WX_CPPFLAGS_BASE)
convert_binary_to_star_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
convert_binary_to_star_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

convert_eer_to_mrc_SOURCES  = programs/convert_eer_to_mrc/convert_eer_to_mrc.cpp
convert_eer_to_mrc_CXXFLAGS = $(WX_CPPFLAGS_BASE)
convert_eer_to_mrc_CPPFLAGS = $(WX_CPPFLAGS_BASE)
convert_eer_to_mrc_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
convert_eer_to_mrc_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


normalize_stack_SOURCES  = programs/normalize_stack/normalize_stack.cpp
normalize_stack_CXXFLAGS = $(WX_CPPFLAGS_BASE)
normalize_stack_CPPFLAGS = $(WX_CPPFLAGS_BASE)
normalize_stack_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
normalize_stack_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

print_stack_statistics_SOURCES  = programs/print_stack_statistics/print_stack_statistics.cpp
print_stack_statistics_CXXFLAGS = $(WX_CPPFLAGS_BASE)
print_stack_statistics_CPPFLAGS = $(WX_CPPFLAGS_BASE)
print_stack_statistics_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
print_stack_statistics_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

combine_stacks_by_star_SOURCES  = programs/combine_stacks_by_star/combine_stacks_by_star.cpp
combine_stacks_by_star_CXXFLAGS = $(WX_CPPFLAGS_BASE)
combine_stacks_by_star_CPPFLAGS = $(WX_CPPFLAGS_BASE)
combine_stacks_by_star_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
combine_stacks_by_star_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

samples_functional_testing_SOURCES  = programs/samples/samples_functional_testing.cpp 
samples_functional_testing_SOURCES += programs/samples/common/helper_functions.cpp programs/samples/common/embedded_test_file.cpp programs/samples/common/numeric_test_file.cpp
samples_functional_testing_SOURCES += programs/samples/0_simple/disk_io_image.cpp  
samples_functional_testing_SOURCES += programs/samples/6_simulation/simple_3d.cpp

align_nmr_spectra_SOURCES  = programs/align_nmr_spectra/align_nmr_spectra.cpp
align_nmr_spectra_CXXFLAGS = $(WX_CPPFLAGS_BASE)
align_nmr_spectra_CPPFLAGS = $(WX_CPPFLAGS_BASE)
align_nmr_spectra_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
align_nmr_spectra_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

correlate_nmr_spectra_SOURCES  = programs/correlate_nmr_spectra/correlate_nmr_spectra.cpp
correlate_nmr_spectra_CXXFLAGS = $(WX_CPPFLAGS_BASE)
correlate_nmr_spectra_CPPFLAGS = $(WX_CPPFLAGS_BASE)
correlate_nmr_spectra_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
correlate_nmr_spectra_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

filter_images_SOURCES  = programs/filter_images/filter_images.cpp
filter_images_CXXFLAGS = $(WX_CPPFLAGS_BASE)
filter_images_CPPFLAGS = $(WX_CPPFLAGS_BASE)
filter_images_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
filter_images_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

if WANT_CISTEM_GPU_AM
        samples_functional_testing_SOURCES += programs/samples/0_simple/resample.cpp
        samples_functional_testing_SOURCES += programs/samples/1_cpu_gpu_comparison/resize_comparison.cpp 
        samples_functional_testing_SOURCES += programs/samples/1_cpu_gpu_comparison/projection_comparison.cpp 
        samples_functional_testing_SOURCES += programs/samples/1_cpu_gpu_comparison/masking.cpp 
        samples_functional_testing_SOURCES += programs/samples/1_cpu_gpu_comparison/statistical_ops.cpp 
        # samples_functional_testing_SOURCES += programs/samples/3_tensor_ops/gpu_image_tensor_ops.cpp
        samples_functional_testing_SOURCES += programs/samples/4_ffts/simple_cufft.cpp
        samples_functional_testing_SOURCES += programs/samples/5_batched_ops/batched_correlation.cpp
endif

if WANT_CISTEM_GPU_AM 
        samples_functional_testing_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
        samples_functional_testing_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
        samples_functional_testing_LDADD    = libgpucore.a libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
else
    samples_functional_testing_CXXFLAGS = $(WX_CPPFLAGS_BASE)
    samples_functional_testing_CPPFLAGS = $(WX_CPPFLAGS_BASE)
    samples_functional_testing_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
endif
samples_functional_testing_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

match_template_SOURCES  = programs/match_template/match_template.cpp
match_template_SOURCES += programs/match_template/template_matching_data_sizer.cpp
match_template_CXXFLAGS = $(WX_CPPFLAGS_BASE)
match_template_CPPFLAGS = $(WX_CPPFLAGS_BASE)
match_template_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
match_template_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

if WANT_CISTEM_GPU_AM  
    match_template_gpu_SOURCES  = programs/match_template/match_template.cpp
    match_template_gpu_SOURCES += programs/match_template/template_matching_data_sizer.cpp
    match_template_gpu_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
    match_template_gpu_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
    match_template_gpu_LDADD    = libgpucore.a libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
endif
match_template_gpu_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


prepare_stack_matchtemplate_SOURCES  = programs/prepare_stack_matchtemplate/prepare_stack_matchtemplate.cpp
prepare_stack_matchtemplate_CXXFLAGS = $(WX_CPPFLAGS_BASE)
prepare_stack_matchtemplate_CPPFLAGS = $(WX_CPPFLAGS_BASE)
prepare_stack_matchtemplate_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
prepare_stack_matchtemplate_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)



make_template_result_SOURCES  = programs/make_template_result/make_template_result.cpp
make_template_result_CXXFLAGS = $(WX_CPPFLAGS_BASE)
make_template_result_CPPFLAGS = $(WX_CPPFLAGS_BASE)
make_template_result_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
make_template_result_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

simulate_SOURCES  =  programs/simulate/simulate.cpp programs/simulate/wave_function_propagator.cpp 
simulate_CXXFLAGS = $(WX_CPPFLAGS_BASE)
simulate_CPPFLAGS = $(WX_CPPFLAGS_BASE)
simulate_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
simulate_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

sum_all_power_spectra_SOURCES  =  programs/sum_all_power_spectra/sum_all_power_spectra.cpp 
sum_all_power_spectra_CXXFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_power_spectra_CPPFLAGS = $(WX_CPPFLAGS_BASE)
sum_all_power_spectra_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
sum_all_power_spectra_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

refine_template_SOURCES  = programs/refine_template/refine_template.cpp
refine_template_CXXFLAGS = $(WX_CPPFLAGS_BASE)
refine_template_CPPFLAGS = $(WX_CPPFLAGS_BASE)
refine_template_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
refine_template_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)

if EXPERIMENTAL_AM   
    refine_template_dev_SOURCES = programs/refine_template_dev/refine_template_dev.cpp
    refine_template_dev_CXXFLAGS = $(WX_CPPFLAGS_BASE)
    refine_template_dev_CPPFLAGS = $(WX_CPPFLAGS_BASE)
    refine_template_dev_LDADD = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
    refine_template_dev_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)
endif
    unit_test_runner_SOURCES  = test/unit_test_runner.cpp 
    unit_test_runner_SOURCES  += test/core/test_matrix.cpp 
    unit_test_runner_SOURCES  += test/core/test_non_wx_functions.cpp
    unit_test_runner_SOURCES  += test/core/test_curve.cpp
if WANT_CISTEM_GPU_AM
    unit_test_runner_SOURCES += test/gpu/test_gpu.cpp
                            
    unit_test_runner_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
    unit_test_runner_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
    unit_test_runner_LDADD    =  libgpucore.a libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
else
    unit_test_runner_CXXFLAGS = $(WX_CPPFLAGS_BASE)
    unit_test_runner_CPPFLAGS = $(WX_CPPFLAGS_BASE)
    unit_test_runner_LDADD    = libcore.a $(WX_LIBS_BASE) $(MKL_LIBS)
endif
unit_test_runner_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)


if WANT_CISTEM_GPU_AM
    gpu_devices_SUFFIXES = .cpp
    gpu_devices_SOURCES  =  programs/gpu_devices/gpu_devices.cpp
    gpu_devices_CXXFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
    gpu_devices_CPPFLAGS = -DENABLEGPU $(WX_CPPFLAGS_BASE)
    gpu_devices_LDADD    =  libgpucore.a libcore.a $(WX_LIBS_BASE) $(MKL_LIBS) $(CUDA_LIBS)
    gpu_devices_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)
endif

calculate_template_pvalue_SOURCES  = programs/calculate_template_pvalue/calculate_template_pvalue.cpp
calculate_template_pvalue_CXXFLAGS = $(WX_CPPFLAGS_BASE)
calculate_template_pvalue_CPPFLAGS = $(WX_CPPFLAGS_BASE)
calculate_template_pvalue_LDADD    = libcore.a $(WX_LIBS_BASE)
calculate_template_pvalue_LIBTOOLFLAGS = $(LIBTOOL_FLAGS)
